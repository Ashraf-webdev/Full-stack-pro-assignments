Q4. Discuss the precedence and associativity of operators in JavaScript. Why is understanding these concepts important?

Ans: Precedence and Associativity concepts determine the order in which operators are evaluated when multiple operators are used
in a single expression. 

Here's why understanding them is important:

  1. Precedence: Precedence determines the order in which different types of operators are evaluated in an expression. Operators with
     higher precedence are evaluated before those with lower precedence.

     Importance:
      - Precedence ensures that mathematical expressions are evaluated correctly. For example, multiplication should be performed before addition.
      - It helps in making your code more concise by reducing the need for excessive parentheses to clarify the order of operations.

  2. Associativity: Associativity determines the order in which operators with the same precedence are evaluated. Some operators are left-associative,
     meaning they are evaluated from left to right, while others are right-associative, evaluated from right to left.

     Importance:
      - Associativity helps resolve ambiguities in expressions, especially when operators of the same precedence are used together.
      - It ensures that operations are performed in the expected order when chaining operators.

  3. Importance:
      - Understanding operator precedence and associativity is crucial for writing code that behaves as intended.
      - It prevents unexpected results due to incorrect evaluation order.
      - It allows you to write concise and clear expressions without relying on excessive parentheses.
      - It is especially important when combining multiple operators within a single expression, such as in mathematical or logical expressions.
      - Proper understanding reduces the risk of introducing logic errors in your code.

  4. Operator Precedence and Associativity Table:
     - JavaScript has a defined precedence and associativity for each operator, and it's crucial to refer to the official table in the JavaScript
       documentation or developer resources for the most accurate information.

In conclusion, operator precedence and associativity are fundamental concepts in JavaScript that ensure the correct evaluation order of operators in expressions. Understanding these concepts is essential for writing reliable code that behaves as expected, especially when dealing with complex expressions that involve multiple operators.

NOTE: "Examples are contained within the code file."
